// <auto-generated />
using System;
using MicroformAzure.Functions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MicroformAzure.Functions.Migrations
{
    [DbContext(typeof(MicroformAzureContext))]
    [Migration("20211003165939_OrderCode")]
    partial class OrderCode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ApplicationLogsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RelatedEventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationLogs");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ApplicationPayerInfoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccessCodeAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("PayerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ShippingAddressId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PayerId")
                        .IsUnique()
                        .HasFilter("[PayerId] IS NOT NULL");

                    b.ToTable("ApplicationPayerInfo");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ApplicationPayerTokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationPayerInfoId")
                        .HasColumnType("int");

                    b.Property<string>("CardInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPayerInfoId");

                    b.ToTable("ApplicationPayerToken");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ApplicationRequestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicationPayerInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExecutionExact")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRedirectAfterPayment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationPayerInfoId");

                    b.ToTable("ApplicationRequest");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ApplicationSetupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationName")
                        .IsUnique();

                    b.ToTable("ApplicationSetup");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.CybersourceConfigurationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthenticationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnableLog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyFilename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyPass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeysDirectory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MerchantKeyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MerchantsecretKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RunEnvironment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MerchantID")
                        .IsUnique();

                    b.ToTable("CybersourceConfiguration");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.PaymentRequestEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationRequestId")
                        .HasColumnType("int");

                    b.Property<string>("BillingInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationRequestId");

                    b.ToTable("PaymentRequest");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.PaymentResultEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentRequestId")
                        .HasColumnType("int");

                    b.Property<string>("ReturnDesicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentRequestId");

                    b.ToTable("PaymentResult");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ScheduledPaymentsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExecutionExact")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastExecution")
                        .HasColumnType("datetime2");

                    b.Property<string>("Param1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScheduledPayments");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ApplicationPayerTokenEntity", b =>
                {
                    b.HasOne("MicroformAzure.Functions.Entities.ApplicationPayerInfoEntity", "ApplicationPayerInfo")
                        .WithMany("ApplicationPayerTokens")
                        .HasForeignKey("ApplicationPayerInfoId");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.ApplicationRequestEntity", b =>
                {
                    b.HasOne("MicroformAzure.Functions.Entities.ApplicationPayerInfoEntity", "ApplicationPayerInfo")
                        .WithMany("ApplicationRequests")
                        .HasForeignKey("ApplicationPayerInfoId");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.PaymentRequestEntity", b =>
                {
                    b.HasOne("MicroformAzure.Functions.Entities.ApplicationRequestEntity", "ApplicationRequest")
                        .WithMany("PaymentRequests")
                        .HasForeignKey("ApplicationRequestId");
                });

            modelBuilder.Entity("MicroformAzure.Functions.Entities.PaymentResultEntity", b =>
                {
                    b.HasOne("MicroformAzure.Functions.Entities.PaymentRequestEntity", "PaymentRequest")
                        .WithMany("PaymentResults")
                        .HasForeignKey("PaymentRequestId");
                });
#pragma warning restore 612, 618
        }
    }
}
